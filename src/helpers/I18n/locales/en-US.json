{
  "generic-unauthorized": "generic-unauthorized",
  "empty-token-unauthorized": "empty-token-unauthorized",
  "not-authorized-unauthorized": "not-authorized-unauthorized",
  "invalid-token-unauthorized": "invalid-token-unauthorized",
  "validation": {
    "any": {
      "required": "Field is required",
      "empty": "validation.any.empty"
    },
    "string": {
      "email": "Field must be a valid email"
    },
    "object": {
      "base": "validation.object.base"
    },
    "number": {
      "base": "validation.number.base"
    }
  },
  "validation-error": "validation-error",
  "establishment": {
    "created": "establishment.created",
    "show": "establishment.show",
    "updated": "establishment.updated",
    "user-list": "establishment.user-list"
  },
  "invalid": {
    "password": "invalid.password",
    "body": "invalid.body",
    "jwt": "invalid.jwt",
    "user-establishment": "Only allowed to have one establishment"
  },
  "plans": {
    "list": "Listing all plans successfully",
    "show": "Listing plan details successfully"
  },
  "categories": {
    "list": "Listing all categories successfully",
    "show": "Listing category details successfully"
  },
  "cookeries": {
    "list": "Listing all cookeries successfully",
    "show": "Listing cookery details successfully"
  },
  "status": {
    "ok": "OK"
  },
  "signed": {
    "in": "signed.in",
    "up": "signed.up"
  },
  "not-found": {
    "user": "not-found.user",
    "establishment": "not-found.establishment",
    "url": "not-found.url"
  },
  "conflict": {
    "user": "conflict.user",
    "establishment": "conflict.establishment"
  },
  "unauthorized": {
    "empty-token": "unauthorized.empty-token",
    "not-authorized": "unauthorized.not-authorized",
    "jwt-incomplete": "unauthorized.jwt-incomplete",
    "insuficient-permission": {
      "establishment": {
        "create": "Insuficient permition to create establishment"
      }
    }
  },
  "expired": {
    "jwt": "expired.jwt"
  },
  "token": {
    "refresh": "token.refresh",
    "ok": "token.ok"
  },
  "forbidden": {
    "jwt": "forbidden.jwt"
  },
  "robots": {
    "txt": "User-agent: *\nDisallow: /"
  },
  "http": {
    "500": "http.500"
  }
}